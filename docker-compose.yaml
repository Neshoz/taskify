version: "3.8"
services:
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - 80:80

  account-service:
    container_name: account-service
    env_file:
      - ./packages/account-service/.env
    build:
      context: .
      dockerfile: ./packages/account-service/Dockerfile
    ports:
      - 8001:8001
    volumes:
      - ./packages/account-service:/usr/app/packages/account-service
    depends_on:
      postgres:
        condition: service_healthy
      db-migrate:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy

  webhook-service:
    container_name: webhook-service
    env_file:
      - ./packages/webhook-service/.env
    build:
      context: .
      dockerfile: ./packages/webhook-service/Dockerfile
    ports:
      - 8003:8003
    volumes:
      - ./packages/webhook-service:/usr/app/packages/webhook-service
    depends_on:
      postgres:
        condition: service_healthy
      db-migrate:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy

  collection-service:
    container_name: collection-service
    env_file:
      - ./packages/collection-service/.env
    build:
      context: .
      dockerfile: ./packages/collection-service/Dockerfile
    ports:
      - 8002:8002
    volumes:
      - ./packages/collection-service:/usr/app/packages/collection-service
    depends_on:
      postgres:
        condition: service_healthy
      db-migrate:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 20s
      retries: 5

  db-migrate:
    container_name: db-migrate
    build:
      context: .
      dockerfile: ./packages/tools/db-migrate/Dockerfile
    env_file:
      - ./packages/tools/db-migrate/.env
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres
    ports:
      - 5432:5432
    env_file:
      - ./packages/db/.env
    build:
      context: ./packages/db/
      dockerfile: Dockerfile
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "taskify", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - 8888:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=root
